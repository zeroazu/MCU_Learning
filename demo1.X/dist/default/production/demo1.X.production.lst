

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Fri Jul 12 21:34:23 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F84A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    11                           	dabs	1,0x4E,2
    12     0000                     
    13                           ; Generated 12/10/2023 GMT
    14                           ; 
    15                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution. Publication is not required when
    29                           ;        this file is used in an embedded application.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16F84A Definitions
    45                           ; 
    46                           ; SFR Addresses
    47     0000                     	;# 
    48     0001                     	;# 
    49     0002                     	;# 
    50     0003                     	;# 
    51     0004                     	;# 
    52     0005                     	;# 
    53     0006                     	;# 
    54     0008                     	;# 
    55     0009                     	;# 
    56     000A                     	;# 
    57     000B                     	;# 
    58     0081                     	;# 
    59     0085                     	;# 
    60     0086                     	;# 
    61     0088                     	;# 
    62     0089                     	;# 
    63     0000                     	;# 
    64     0001                     	;# 
    65     0002                     	;# 
    66     0003                     	;# 
    67     0004                     	;# 
    68     0005                     	;# 
    69     0006                     	;# 
    70     0008                     	;# 
    71     0009                     	;# 
    72     000A                     	;# 
    73     000B                     	;# 
    74     0081                     	;# 
    75     0085                     	;# 
    76     0086                     	;# 
    77     0088                     	;# 
    78     0089                     	;# 
    79     0006                     _PORTBbits	set	6
    80     0005                     _PORTAbits	set	5
    81     000B                     _INTCONbits	set	11
    82     0086                     _TRISB	set	134
    83     0085                     _TRISA	set	133
    84     0081                     _OPTION_REGbits	set	129
    85                           
    86                           	psect	cinit
    87     03FC                     start_initialization:	
    88                           ; #config settings
    89                           
    90     03FC                     __initialization:
    91                           
    92                           ; Clear objects allocated to BANK0
    93     03FC  1283               	bcf	3,5	;RP0=0, select bank0
    94     03FD  018C               	clrf	__pbssBANK0& (0+127)
    95     03FE                     end_of_initialization:	
    96                           ;End of C runtime variable initialization code
    97                           
    98     03FE                     __end_of__initialization:
    99     03FE  0183               	clrf	3
   100     03FF  2BE0               	ljmp	_main	;jump to C main() function
   101                           
   102                           	psect	bssBANK0
   103     000C                     __pbssBANK0:
   104     000C                     _myCounter:
   105     000C                     	ds	1
   106                           
   107                           	psect	cstackCOMMON
   108     0000                     __pcstackCOMMON:
   109     0000                     ??_SystemInitial:
   110     0000                     ??_main:	
   111                           ; 1 bytes @ 0x0
   112                           
   113                           
   114                           	psect	cstackBANK0
   115     0000                     __pcstackBANK0:	
   116                           ; 1 bytes @ 0x0
   117                           
   118     0000                     ?_SystemInitial:
   119     0000                     ?_main:	
   120                           ; 1 bytes @ 0x0
   121                           
   122                           
   123                           	psect	maintext
   124     03E0                     __pmaintext:	
   125                           ; 1 bytes @ 0x0
   126 ;;
   127 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   128 ;;
   129 ;; *************** function _main *****************
   130 ;; Defined at:
   131 ;;		line 34 in file "main.c"
   132 ;; Parameters:    Size  Location     Type
   133 ;;		None
   134 ;; Auto vars:     Size  Location     Type
   135 ;;		None
   136 ;; Return value:  Size  Location     Type
   137 ;;                  1    wreg      void 
   138 ;; Registers used:
   139 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   140 ;; Tracked objects:
   141 ;;		On entry : B00/0
   142 ;;		On exit  : 0/0
   143 ;;		Unchanged: 0/0
   144 ;; Data sizes:     COMMON   BANK0
   145 ;;      Params:         0       0
   146 ;;      Locals:         0       0
   147 ;;      Temps:          0       0
   148 ;;      Totals:         0       0
   149 ;;Total ram usage:        0 bytes
   150 ;; Hardware stack levels required when called: 1
   151 ;; This function calls:
   152 ;;		_SystemInitial
   153 ;; This function is called by:
   154 ;;		Startup code after reset
   155 ;; This function uses a non-reentrant model
   156 ;;
   157                           
   158     03E0                     _main:	
   159                           ;psect for function _main
   160                           
   161     03E0                     l606:	
   162                           ;incstack = 0
   163                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   164                           
   165                           
   166                           ;main.c: 35:     SystemInitial();
   167     03E0  23D5               	fcall	_SystemInitial
   168     03E1                     l608:
   169                           
   170                           ;main.c: 37:         if (INTCONbits.T0IF){
   171     03E1  1D0B               	btfss	11,2	;volatile
   172     03E2  2BE4               	goto	u51
   173     03E3  2BE5               	goto	u50
   174     03E4                     u51:
   175     03E4  2BEB               	goto	l614
   176     03E5                     u50:
   177     03E5                     l610:
   178                           
   179                           ;main.c: 38:             myCounter.tmr0Counter ++;
   180     03E5  3001               	movlw	1
   181     03E6  00CF               	movwf	btemp+1
   182     03E7  084F               	movf	btemp+1,w
   183     03E8  1283               	bcf	3,5	;RP0=0, select bank0
   184     03E9  078C               	addwf	_myCounter,f
   185     03EA                     l612:
   186                           
   187                           ;main.c: 39:             INTCONbits.T0IF = 0;
   188     03EA  110B               	bcf	11,2	;volatile
   189     03EB                     l614:
   190                           
   191                           ;main.c: 41:         if (!PORTAbits.RA4){
   192     03EB  1283               	bcf	3,5	;RP0=0, select bank0
   193     03EC  1A05               	btfsc	5,4	;volatile
   194     03ED  2BEF               	goto	u61
   195     03EE  2BF0               	goto	u60
   196     03EF                     u61:
   197     03EF  2BF9               	goto	l23
   198     03F0                     u60:
   199     03F0                     l616:
   200                           
   201                           ;main.c: 42:             PORTBbits.RB0 = myCounter.t2Hz;
   202     03F0  1B0C               	btfsc	_myCounter,6
   203     03F1  2BF3               	goto	u71
   204     03F2  2BF6               	goto	u70
   205     03F3                     u71:
   206     03F3  1283               	bcf	3,5	;RP0=0, select bank0
   207     03F4  1406               	bsf	6,0	;volatile
   208     03F5  2BF8               	goto	u84
   209     03F6                     u70:
   210     03F6  1283               	bcf	3,5	;RP0=0, select bank0
   211     03F7  1006               	bcf	6,0	;volatile
   212     03F8                     u84:
   213                           
   214                           ;main.c: 43:         }else{
   215     03F8  2BE1               	goto	l608
   216     03F9                     l23:
   217                           
   218                           ;main.c: 44:             PORTBbits.RB0 = 0;
   219     03F9  1006               	bcf	6,0	;volatile
   220     03FA  2BE1               	goto	l608
   221     03FB  2800               	ljmp	start
   222     03FC                     __end_of_main:
   223                           
   224                           	psect	text1
   225     03D5                     __ptext1:	
   226 ;; *************** function _SystemInitial *****************
   227 ;; Defined at:
   228 ;;		line 49 in file "main.c"
   229 ;; Parameters:    Size  Location     Type
   230 ;;		None
   231 ;; Auto vars:     Size  Location     Type
   232 ;;		None
   233 ;; Return value:  Size  Location     Type
   234 ;;                  1    wreg      void 
   235 ;; Registers used:
   236 ;;		wreg, status,2, status,0
   237 ;; Tracked objects:
   238 ;;		On entry : 0/0
   239 ;;		On exit  : 0/0
   240 ;;		Unchanged: 0/0
   241 ;; Data sizes:     COMMON   BANK0
   242 ;;      Params:         0       0
   243 ;;      Locals:         0       0
   244 ;;      Temps:          0       0
   245 ;;      Totals:         0       0
   246 ;;Total ram usage:        0 bytes
   247 ;; Hardware stack levels used: 1
   248 ;; This function calls:
   249 ;;		Nothing
   250 ;; This function is called by:
   251 ;;		_main
   252 ;; This function uses a non-reentrant model
   253 ;;
   254                           
   255     03D5                     _SystemInitial:	
   256                           ;psect for function _SystemInitial
   257                           
   258     03D5                     l596:	
   259                           ;incstack = 0
   260                           ; Regs used in _SystemInitial: [wreg+status,2+status,0]
   261                           
   262                           
   263                           ;main.c: 50:     OPTION_REGbits.PS = 0b011;
   264     03D5  1683               	bsf	3,5	;RP0=1, select bank1
   265     03D6  0801               	movf	1,w	;volatile
   266     03D7  39F8               	andlw	-8
   267     03D8  3803               	iorlw	3
   268     03D9  0081               	movwf	1	;volatile
   269     03DA                     l598:
   270                           
   271                           ;main.c: 51:     OPTION_REGbits.T0CS = 0;
   272     03DA  1281               	bcf	1,5	;volatile
   273     03DB                     l600:
   274                           
   275                           ;main.c: 52:     OPTION_REGbits.PSA = 0;
   276     03DB  1181               	bcf	1,3	;volatile
   277     03DC                     l602:
   278                           
   279                           ;main.c: 53:     TRISA = 0b00010000;
   280     03DC  3010               	movlw	16
   281     03DD  0085               	movwf	5	;volatile
   282     03DE                     l604:
   283                           
   284                           ;main.c: 54:     TRISB = 0b00000000;
   285     03DE  0186               	clrf	6	;volatile
   286     03DF                     l30:
   287     03DF  0008               	return
   288     03E0                     __end_of_SystemInitial:
   289     004E                     btemp	set	78	;btemp
   290     004E                     wtemp0	set	78
   291                           
   292                           	psect	config
   293                           
   294                           ;Config register CONFIG @ 0x2007
   295                           ;	Oscillator Selection bits
   296                           ;	FOSC = XT, XT oscillator
   297                           ;	Watchdog Timer
   298                           ;	WDTE = OFF, WDT disabled
   299                           ;	Power-up Timer Enable bit
   300                           ;	PWRTE = OFF, Power-up Timer is disabled
   301                           ;	Code Protection bit
   302                           ;	CP = OFF, Code protection disabled
   303     2007                     	org	8199
   304     2007  3FF9               	dw	16377

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            66      0       1

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                      _SystemInitial
 ---------------------------------------------------------------------------------
 (1) _SystemInitial                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SystemInitial

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            0      0       0       0        0.0%
EEDATA              40      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               42      0       1       3        1.5%
ABS                  0      0       1       4        0.0%
BITBANK0            42      0       0       5        0.0%
DATA                 0      0       1       6        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Fri Jul 12 21:34:23 2024

                     l30 03DF                       l23 03F9                       u50 03E5  
                     u51 03E4                       u60 03F0                       u61 03EF  
                     u70 03F6                       u71 03F3                       u84 03F8  
                    l600 03DB                      l602 03DC                      l610 03E5  
                    l604 03DE                      l612 03EA                      l614 03EB  
                    l606 03E0                      l616 03F0                      l608 03E1  
                    l596 03D5                      l598 03DA                     _main 03E0  
                   btemp 004E                     start 0000                    ?_main 0000  
                  _TRISA 0085                    _TRISB 0086                    status 0003  
                  wtemp0 004E          __initialization 03FC             __end_of_main 03FC  
                 ??_main 0000  __end_of__initialization 03FE           __pcstackCOMMON 0000  
         _OPTION_REGbits 0081               __pbssBANK0 000C               __pmaintext 03E0  
          _SystemInitial 03D5                  __ptext1 03D5           ?_SystemInitial 0000  
   end_of_initialization 03FE                _PORTAbits 0005                _PORTBbits 0006  
        ??_SystemInitial 0000      start_initialization 03FC                ___latbits 0000  
          __pcstackBANK0 0000                _myCounter 000C    __end_of_SystemInitial 03E0  
             _INTCONbits 000B  
