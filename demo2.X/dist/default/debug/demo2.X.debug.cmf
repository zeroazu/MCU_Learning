%CMF
# %PSECTS Section
# For each object file, details of its psects are enumerated here.
# The begining of the section is indicated by %PSECTS.  The first
# line indicates the name of the first object file, e.g.
#    $foo.obj
# Each line that follows describes a psect in that object file, until
# the next object file.  The lines that describe a psect have the
# format:
#    <psect name> <class name> <space> <link address> <load addresses> <length> <delta> <reloc>
# All addresses and the length are given in unqualified hexadecimal
# in delta units.  Any other numeric values are decimal.
%PSECTS
$build/default/debug/mian2.o
Isr_Vec CODE 0 4 4 1 2 1
Por_Vec CODE 0 0 0 1 2 1
MainCode CODE 0 5 5 C 2 1
config CONFIG 4 2007 2007 1 2 1
# %UNUSED Section
# This section enumerates the unused ranges of each CLASS. Each entry
# is described on a single line as follows:
#    <class name> <range> <delta>
# Addresses given in the range are in hexadecimal and units of delta.
%UNUSED
RAM C-4D 1
BANK0 C-4D 1
CONST 1-3 2
CONST 11-3FF 2
ENTRY 1-3 2
ENTRY 11-3FF 2
IDLOC 2000-2003 2
CODE 1-3 2
CODE 11-3FF 2
SFR0 2-7 1
SFR1 80-CD 1
COMMON 4E-4F 1
EEDATA 2100-213F 2
STRCODE 1-3 2
STRCODE 11-3FF 2
STRING 1-3 2
STRING 11-3FF 2
# %LINETAB Section
# This section enumerates the file/line to address mappings.
# The beginning of the section is indicated by %LINETAB.
# The first line indicates the name of the first object file, e.g.
#   $foo.obj
# Each line that follows describes a single mapping until the next
# object file.  Mappings have the following format:
#    <address> <psect name> <class name> ><line number>:<file name>
# The address is absolute and given given in unqualified hex 
# in delta units of the psect. All mappings within an object file
# are in ascending order of addresses.
# All other numeric values are in decimal.
%LINETAB
$build/default/debug/mian2.o
5 MainCode CODE >29:C:\Users\kuovi\MPLABXProjects\demo2.X\mian2.s
6 MainCode CODE >32:C:\Users\kuovi\MPLABXProjects\demo2.X\mian2.s
7 MainCode CODE >36:C:\Users\kuovi\MPLABXProjects\demo2.X\mian2.s
8 MainCode CODE >47:C:\Users\kuovi\MPLABXProjects\demo2.X\mian2.s
9 MainCode CODE >48:C:\Users\kuovi\MPLABXProjects\demo2.X\mian2.s
A MainCode CODE >49:C:\Users\kuovi\MPLABXProjects\demo2.X\mian2.s
B MainCode CODE >50:C:\Users\kuovi\MPLABXProjects\demo2.X\mian2.s
C MainCode CODE >51:C:\Users\kuovi\MPLABXProjects\demo2.X\mian2.s
D MainCode CODE >52:C:\Users\kuovi\MPLABXProjects\demo2.X\mian2.s
E MainCode CODE >53:C:\Users\kuovi\MPLABXProjects\demo2.X\mian2.s
F MainCode CODE >54:C:\Users\kuovi\MPLABXProjects\demo2.X\mian2.s
10 MainCode CODE >55:C:\Users\kuovi\MPLABXProjects\demo2.X\mian2.s
4 Isr_Vec CODE >25:C:\Users\kuovi\MPLABXProjects\demo2.X\mian2.s
0 Por_Vec CODE >20:C:\Users\kuovi\MPLABXProjects\demo2.X\mian2.s
0 Por_Vec CODE >21:C:\Users\kuovi\MPLABXProjects\demo2.X\mian2.s
# %SYMTAB Section
# An enumeration of all symbols in the program.
# The beginning of the section is indicated by %SYMTAB.
# Each line describes a single symbol as follows:
#    <label> <value> [-]<load-adj> <class> <space> <psect> <file-name>
# The value and load-adj are both in unqualified hexadecimal.
# All other numeric values are in decimal.  The load-adj is the
# quantity one needs to add to the symbol value in order to obtain the load
# address of the symbol.  This value may be signed. If the symbol
# was defined in a psect then <psect> will be "-". File-name
# is the name of the object file in which the symbol was defined.
%SYMTAB
__Hspace_0 11 0 ABS 0 - -
__Hspace_1 0 0 ABS 0 - -
__Hspace_3 0 0 ABS 0 - -
__Hspace_4 400F 0 ABS 0 - -
__Hudata_bank0 A 0 ABS 0 udata_bank0 -
__L__absolute__ 0 0 ABS 0 __absolute__ -
__LIsr_Vec 8 0 CODE 0 Isr_Vec -
resetVec 0 0 CODE 0 Por_Vec build/default/debug/mian2.o
__LPor_Vec 0 0 CODE 0 Por_Vec -
__Hedata A 0 ABS 0 edata -
__Hudata A 0 ABS 0 udata -
__HIsr_Vec A 0 CODE 0 Isr_Vec -
__Hconfig 4010 0 CONFIG 4 config -
__Ledata A 0 ABS 0 edata -
__Ludata A 0 ABS 0 udata -
__Hcode A 0 ABS 0 code -
__Hdata A 0 ABS 0 data -
__Lcode A 0 ABS 0 code -
__Ldata A 0 ABS 0 data -
__HPor_Vec 2 0 CODE 0 Por_Vec -
__S0 11 0 ABS 0 - -
__S1 0 0 ABS 0 - -
__S3 0 0 ABS 0 - -
__Lconfig 0 0 CONFIG 4 config -
__Lspace_0 0 0 ABS 0 - -
__Lspace_1 0 0 ABS 0 - -
__Lspace_3 0 0 ABS 0 - -
__Lspace_4 0 0 ABS 0 - -
__LMainCode A 0 ABS 0 MainCode -
__Ludata_bank0 A 0 ABS 0 udata_bank0 -
__H__absolute__ 0 0 ABS 0 __absolute__ -
__HMainCode A 0 ABS 0 MainCode -
# %SPLITSTAB Section
# This section enumerates all the psect splits performed by the assembler.
# The beginning of the section is indicated by %SPLITSTAB.
# Each line is a record a particular split, where the parent psect is on
# the left and the child on the right.  Note that a child psect is always
# split form the top of the parent psect. All splits from a given parent
# are listed in the order in which they occurred.
%SPLITSTAB
# %DABS Section
# This section contains a table of all usuage of the assember
# directive DABS in the program. Each line has the following format:
#   <name> <space> <address> <size>
# If the DABS was originally labelled then that shall be <name>,
# otherwise name will be "-".  The <space> number is in decimal.
# <address> and <size> are in byte units as unqaulified hexadecimal
%DABS
# %SEGMENTS Section
# This sections enumerates the segments of the program.  Each segment
# is described on a single line as follows:
#    <name> <space> <link address> <file address> <size> <delta>
# Addresses and size are in unqualified hexadecimal.  The link address
# and size are in units of delta. The file address is in units of bytes.
# All other numeric quantities are in decimal.
%SEGMENTS
Isr_Vec 0 4 8 D 2
Por_Vec 0 0 0 1 2
# %NOTES Section
# This section contains data of all the note-psects.  The beginning of the section
# is indicated by %NOTES. The first line indicates the name and decimal
# byte-length of the first note-psect, e.g.
#   $codecov_info_hdr 16
# Each line that follows contains the byte-data of the psect in hexadecimal as a
# space-separated list. These lines are limited to 16 bytes of data.
%NOTES
